"""
This plugin provides a 'htmlreport' command, to generate an issue list in HTML form.
"""

_HTML_HEAD = """\
<html>
<head>
   <title>Later Do</title>
   <style>
body {
   max-width: 40em;
   margin: 1em auto;
   font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
}
h1 { font-weight: bold; font-style: italic; }
h1,
.status_closed,
.properties th,
.issue .guid { color: #777; }
.properties th { text-align: right; font-weight: normal; }
.issue .guid { float: right; }
.issue .guid,
.issue .msg { font-family: monospace; }
.issue .msg { white-space: pre; }
.issue .guid,
#footer { font-size: 0.8em; }
#footer { margin: 2em auto; }
   </style>
</head>
<body>
   <h1>Later Do</h1>
"""

_HTML_ISSUE = """
<div class="issue status_%(status)s">
<span class="guid">%(guid)s</span>
<h2>%(title)s</h2>
<table class="properties">
   <tr><th>status</th><td>%(status)s</td></tr>
   <tr><th>responsible</th><td>%(responsible)s</td></tr>
</table>
<div class="msg">%(msg)s</div>
</div>
"""

_HTML_FOOT = """\
<div id="footer">
   Generated by the <a href="http://github.com/beza1e1/later">later</a> htmlreport plugin.
</div>
</body>
</html>
"""

_HOOKS=None

def cmd_htmlreport(args):
   """Generate an html issue list."""
   print _HTML_HEAD
   delayed = list()
   for guid in _HOOKS.be_all_guids():
      guid = _HOOKS.be_complete_guid(guid)
      issue = _HOOKS.be_load_issue(guid)
      info = issue.properties.copy()
      i = issue.msg.find("\n")
      if i < 0:
         i = len(issue.msg)
      info['title'] = issue.msg[:i]
      info['msg'] = issue.msg[i:]
      info['guid'] = guid
      if info['status'] != "closed":
         print _HTML_ISSUE % info
      else:
         delayed.append(info)
   if delayed:
      print "<hr/>"
   for info in delayed:
      print _HTML_ISSUE % info
   print _HTML_FOOT

def plugin_init(hooks):
   global _HOOKS
   hooks["cmd_htmlreport"] = cmd_htmlreport
   _HOOKS = hooks


